#TODO:
    # Add numerical constants
    

filetype: verilog

detect: 
    filename: "\\.(v|vh|sv|svh)$"

rules: 
    - identifier: "(module|package|task|interface|program|class) [0-9A-Za-z_]+"
    - identifier: "function [0-9A-Za-z_]+ [0-9A-Za-z_]+"
    # Verilog keywords, taken from http://svref.renerta.com/sv00003.htm.
    - statement: "\\b(always|and|assign|automatic|begin|buf|bufif0|bufif1|case|casex|casez|cell|class|cmos|config)\\b"
    - statement: "\\b(deassign|default|defparam|design|disable|edge|else|end|endcase|endconfig|endfunction|endgenerate)\\b"
    - statement: "\\b(endmodule|endprimitive|endspecify|endtable|endtask|event|for|force|forever|fork|function|generate)\\b"
    - statement: "\\b(genvar|highz0|highz1|if|iff|ifnone|incdir|include|initial|inout|input|instance|integer|join)\\b"
    - statement: "\\b(large|liblist|library|localparam|macromodule|medium|module|nand|negedge|nmos|nor|noshowcancelled)\\b"
    - statement: "\\b(not|notif0|notif1|null|or|output|parameter|pmos|posedge|primitive|pull0|pull1|pulldown|pullup)\\b"
    - statement: "\\b(pulsestyle_onevent|pulsestyle_ondetect|rcmos|real|realtime|reg|release|repeat|rnmos|rpmos|rtran)\\b"
    - statement: "\\b(rtranif0|rtranif1|scalared|showcancelled|signed|small|specify|specparam|strong0|strong1|supply0)\\b"
    - statement: "\\b(supply1|table|task|time|tran|tranif0|tranif1|tri|tri0|tri1|triand|trior|trireg|unsigned|use|uwire)\\b"
    - statement: "\\b(vectored|wait|wand|weak0|weak1|while|wire|wor|xnor|xor)\\b"
    # System Verilog keywords, taken from same source.
    - statement: "\\b(alias|always_comb|always_ff|always_latch|assert|assume|before|bind|bins|binsof|bit|break|byte)\\b"
    - statement: "\\b(chandle|clocking|const|constraint|context|continue|cover|covergroup|coverpoint|cross|dist|do)\\b"
    - statement: "\\b(endclass|endclocking|endgroup|endinterface|endpackage|endprogram|endproperty|endsequence|enum)\\b"
    - statement: "\\b(expect|export|extends|extern|final|first_match|foreach|forkjoin|ignore_bins|illegal_bins|import)\\b"
    - statement: "\\b(inside|int|interface|intersect|join_any|join_none|local|logic|longint|matches|modport|new|package)\\b"
    - statement: "\\b(packed|priority|program|property|protected|pure|rand|randc|randcase|randsequence|ref|return)\\b"
    - statement: "\\b(sequence|shortint|shortreal|solve|static|string|struct|super|tagged|this|throughout|timeprecision)\\b"
    - statement: "\\b(timeunit|type|typedef|union|unique|var|virtual|void|wait_order|wildcard|with|within)\\b"
    # Builtin function names (e.g. $display).
    - identifier: "\\$[0-9A-Za-z_]+"
    # Macros.
    - preproc: "^[[:space:]]*`[0-9A-Za-z_]+"
    # Operators and brackets are the same as C++
    - symbol.operator: "[.:;,+*|=!\\%]|<|>|/|-|&"
    - symbol.brackets: "[(){}]|\\[|\\]"
    # Strings and comments are the same as C++
    - constant.string: "\"(\\\\.|[^\"])*\""
    - comment: "//.*"
    - comment:
        start: "/\\*"
        end: "\\*/"
        rules: []